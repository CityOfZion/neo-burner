{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/App/PDF.js\";\nimport React, { Component } from 'react';\nimport PDFViewer from 'pdf-viewer-reactjs'; // import ReactToPrint from 'react-to-print'\n// import PrintTemplate from 'react-print'\n// import './style.css'\n\nclass PDF extends Component {\n  constructor(props) {\n    super(props); // this.createQrCodesFromAccounts = this.createQrCodesFromAccounts.bind(this)\n\n    this.state = {};\n  }\n\n  componentDidMount() {} // createQrCodesFromAccounts() {\n  //   let qrEntry = []\n  //   let wallets = []\n  //\n  //   let i = 40, j = 430, k = 770\n  //   this.props.accounts.forEach((account) => {\n  //     console.log('pdf account: '+account)\n  //\n  //     wallets.push(\n  //       <QRCode value={account._address} bgColor=\"#000000\" fgColor=\"#ffFFff\" level=\"Q\" style={{ width: 100, height: 100 }} />,\n  //\n  //       <QRCode value={account.url} bgColor=\"#000000\" fgColor=\"#ffFFff\" level=\"Q\" style={{ width: 100, height: 100 }} />,\n  //\n  //       <QRCode value={account._WIF} bgColor=\"#000000\" fgColor=\"#ffFFff\" level=\"Q\" style={{ width: 100, height: 100 }} />,\n  //\n  //       <QRCode value={account._bip39} bgColor=\"#000000\" fgColor=\"#ffFFff\" level=\"Q\" style={{ width: 100, height: 100 }} />\n  //     )\n  //   })\n  //   // console.log('wallets: '+util.inspect(wallets, {depth: null}))\n  //   return wallets\n  // }\n\n\n  render() {\n    console.log('pdfPath: ' + this.props.pdf); // let wallets = this.createQrCodesFromAccounts()\n    // console.log('got '+this.props.accounts.length+' wallets')\n    // console.log('wallet: '+wallets[0])\n    // let pub = qr.image('test', { type: 'png'})\n\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(PDFViewer, {\n      document: {\n        url: 'file://' + this.props.pdf\n      },\n      scale: .75,\n      canvasCss: {\n        width: '100%',\n        height: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PDF;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/App/PDF.js"],"names":["React","Component","PDFViewer","PDF","constructor","props","state","componentDidMount","render","console","log","pdf","width","height","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,oBAAtB,C,CAEA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AAEA,SAAKC,KAAL,GAAa,EAAb;AAED;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB,CAZyB,CAc1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAY,KAAKL,KAAL,CAAWM,GAAnC,EADO,CAEL;AACA;AACA;AACA;;AACF,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAE,YAAU,KAAKT,KAAL,CAAWM;AAA5B,OAArB;AACE,MAAA,KAAK,EAAE,GADT;AAEE,MAAA,SAAS,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AAlDyB;;AAqD5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport PDFViewer from 'pdf-viewer-reactjs'\n\n// import ReactToPrint from 'react-to-print'\n// import PrintTemplate from 'react-print'\n// import './style.css'\n\nclass PDF extends Component {\n  constructor(props) {\n    super(props)\n\n    // this.createQrCodesFromAccounts = this.createQrCodesFromAccounts.bind(this)\n\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  // createQrCodesFromAccounts() {\n  //   let qrEntry = []\n  //   let wallets = []\n  //\n  //   let i = 40, j = 430, k = 770\n  //   this.props.accounts.forEach((account) => {\n  //     console.log('pdf account: '+account)\n  //\n  //     wallets.push(\n  //       <QRCode value={account._address} bgColor=\"#000000\" fgColor=\"#ffFFff\" level=\"Q\" style={{ width: 100, height: 100 }} />,\n  //\n  //       <QRCode value={account.url} bgColor=\"#000000\" fgColor=\"#ffFFff\" level=\"Q\" style={{ width: 100, height: 100 }} />,\n  //\n  //       <QRCode value={account._WIF} bgColor=\"#000000\" fgColor=\"#ffFFff\" level=\"Q\" style={{ width: 100, height: 100 }} />,\n  //\n  //       <QRCode value={account._bip39} bgColor=\"#000000\" fgColor=\"#ffFFff\" level=\"Q\" style={{ width: 100, height: 100 }} />\n  //     )\n  //   })\n  //   // console.log('wallets: '+util.inspect(wallets, {depth: null}))\n  //   return wallets\n  // }\n\n  render() {\n    console.log('pdfPath: '+this.props.pdf)\n      // let wallets = this.createQrCodesFromAccounts()\n      // console.log('got '+this.props.accounts.length+' wallets')\n      // console.log('wallet: '+wallets[0])\n      // let pub = qr.image('test', { type: 'png'})\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <PDFViewer document={{ url: 'file://'+this.props.pdf, }}\n          scale={.75}\n          canvasCss={{width: '100%', height: '50%'}}\n        />\n      </div>\n    )\n  }\n}\n\nexport default PDF\n"]},"metadata":{},"sourceType":"module"}