{"ast":null,"code":"\"use strict\";\n\nfunction matrix2path(matrix) {\n  var N = matrix.length;\n  var filled = [];\n\n  for (var row = -1; row <= N; row++) {\n    filled[row] = [];\n  }\n\n  var path = [];\n\n  for (var row = 0; row < N; row++) {\n    for (var col = 0; col < N; col++) {\n      if (filled[row][col]) continue;\n      filled[row][col] = 1;\n\n      if (isDark(row, col)) {\n        if (!isDark(row - 1, col)) {\n          path.push(plot(row, col, 'right'));\n        }\n      } else {\n        if (isDark(row, col - 1)) {\n          path.push(plot(row, col, 'down'));\n        }\n      }\n    }\n  }\n\n  return path;\n\n  function isDark(row, col) {\n    if (row < 0 || col < 0 || row >= N || col >= N) return false;\n    return !!matrix[row][col];\n  }\n\n  function plot(row0, col0, dir) {\n    filled[row0][col0] = 1;\n    var res = [];\n    res.push(['M', col0, row0]);\n    var row = row0;\n    var col = col0;\n    var len = 0;\n\n    do {\n      switch (dir) {\n        case 'right':\n          filled[row][col] = 1;\n\n          if (isDark(row, col)) {\n            filled[row - 1][col] = 1;\n\n            if (isDark(row - 1, col)) {\n              res.push(['h', len]);\n              len = 0;\n              dir = 'up';\n            } else {\n              len++;\n              col++;\n            }\n          } else {\n            res.push(['h', len]);\n            len = 0;\n            dir = 'down';\n          }\n\n          break;\n\n        case 'left':\n          filled[row - 1][col - 1] = 1;\n\n          if (isDark(row - 1, col - 1)) {\n            filled[row][col - 1] = 1;\n\n            if (isDark(row, col - 1)) {\n              res.push(['h', -len]);\n              len = 0;\n              dir = 'down';\n            } else {\n              len++;\n              col--;\n            }\n          } else {\n            res.push(['h', -len]);\n            len = 0;\n            dir = 'up';\n          }\n\n          break;\n\n        case 'down':\n          filled[row][col - 1] = 1;\n\n          if (isDark(row, col - 1)) {\n            filled[row][col] = 1;\n\n            if (isDark(row, col)) {\n              res.push(['v', len]);\n              len = 0;\n              dir = 'right';\n            } else {\n              len++;\n              row++;\n            }\n          } else {\n            res.push(['v', len]);\n            len = 0;\n            dir = 'left';\n          }\n\n          break;\n\n        case 'up':\n          filled[row - 1][col] = 1;\n\n          if (isDark(row - 1, col)) {\n            filled[row - 1][col - 1] = 1;\n\n            if (isDark(row - 1, col - 1)) {\n              res.push(['v', -len]);\n              len = 0;\n              dir = 'left';\n            } else {\n              len++;\n              row--;\n            }\n          } else {\n            res.push(['v', -len]);\n            len = 0;\n            dir = 'right';\n          }\n\n          break;\n      }\n    } while (row != row0 || col != col0);\n\n    return res;\n  }\n}\n\nfunction pushSVGPath(matrix, stream, margin) {\n  matrix2path(matrix).forEach(function (subpath) {\n    var res = '';\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          res += 'M' + (item[1] + margin) + ' ' + (item[2] + margin);\n          break;\n\n        default:\n          res += item.join('');\n      }\n    }\n\n    res += 'z';\n    stream.push(res);\n  });\n}\n\nfunction SVG_object(matrix, margin) {\n  var stream = [];\n  pushSVGPath(matrix, stream, margin);\n  var result = {\n    size: matrix.length + 2 * margin,\n    path: stream.filter(Boolean).join('')\n  };\n  return result;\n}\n\nfunction SVG(matrix, stream, margin, size) {\n  var X = matrix.length + 2 * margin;\n  stream.push('<svg xmlns=\"http://www.w3.org/2000/svg\" ');\n\n  if (size > 0) {\n    var XY = X * size;\n    stream.push('width=\"' + XY + '\" height=\"' + XY + '\" ');\n  }\n\n  stream.push('viewBox=\"0 0 ' + X + ' ' + X + '\">');\n  stream.push('<path d=\"');\n  pushSVGPath(matrix, stream, margin);\n  stream.push('\"/></svg>');\n  stream.push(null);\n}\n\nfunction EPS(matrix, stream, margin) {\n  var N = matrix.length;\n  var scale = 9;\n  var X = (N + 2 * margin) * scale;\n  stream.push(['%!PS-Adobe-3.0 EPSF-3.0', '%%BoundingBox: 0 0 ' + X + ' ' + X, '/h { 0 rlineto } bind def', '/v { 0 exch neg rlineto } bind def', '/M { neg ' + (N + margin) + ' add moveto } bind def', '/z { closepath } bind def', scale + ' ' + scale + ' scale', ''].join('\\n'));\n  matrix2path(matrix).forEach(function (subpath) {\n    var res = '';\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          res += item[1] + margin + ' ' + item[2] + ' M ';\n          break;\n\n        default:\n          res += item[1] + ' ' + item[0] + ' ';\n      }\n    }\n\n    res += 'z\\n';\n    stream.push(res);\n  });\n  stream.push('fill\\n%%EOF\\n');\n  stream.push(null);\n}\n\nfunction PDF(matrix, stream, margin) {\n  // TODO deflate\n  var N = matrix.length;\n  var scale = 9;\n  var X = (N + 2 * margin) * scale;\n  var data = ['%PDF-1.0\\n\\n', '1 0 obj << /Type /Catalog /Pages 2 0 R >> endobj\\n', '2 0 obj << /Type /Pages /Count 1 /Kids [ 3 0 R ] >> endobj\\n'];\n  data.push('3 0 obj << /Type /Page /Parent 2 0 R /Resources <<>> ' + '/Contents 4 0 R /MediaBox [ 0 0 ' + X + ' ' + X + ' ] >> endobj\\n');\n  var path = scale + ' 0 0 ' + scale + ' 0 0 cm\\n';\n  path += matrix2path(matrix).map(function (subpath) {\n    var res = '';\n    var x, y;\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          x = item[1] + margin;\n          y = N - item[2] + margin;\n          res += x + ' ' + y + ' m ';\n          break;\n\n        case 'h':\n          x += item[1];\n          res += x + ' ' + y + ' l ';\n          break;\n\n        case 'v':\n          y -= item[1];\n          res += x + ' ' + y + ' l ';\n          break;\n      }\n    }\n\n    res += 'h';\n    return res;\n  }).join('\\n');\n  path += '\\nf\\n';\n  data.push('4 0 obj << /Length ' + path.length + ' >> stream\\n' + path + 'endstream\\nendobj\\n');\n  var xref = 'xref\\n0 5\\n0000000000 65535 f \\n';\n\n  for (var i = 1, l = data[0].length; i < 5; i++) {\n    xref += ('0000000000' + l).substr(-10) + ' 00000 n \\n';\n    l += data[i].length;\n  }\n\n  data.push(xref, 'trailer << /Root 1 0 R /Size 5 >>\\n', 'startxref\\n' + l + '\\n%%EOF\\n');\n  stream.push(data.join(''));\n  stream.push(null);\n}\n\nmodule.exports = {\n  svg: SVG,\n  eps: EPS,\n  pdf: PDF,\n  svg_object: SVG_object\n};","map":null,"metadata":{},"sourceType":"script"}