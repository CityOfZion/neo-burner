{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/web/src/components/Installer/Main.js\";\nimport React, { Component } from 'react';\nimport InstallerHome from './Home';\nimport Footer from './Footer';\nimport InstallerHeaderControls from './HeaderControls';\nimport InstallerNav from './VerticalNav';\nimport About from '../App/About';\nimport '../../style.css';\n\nclass InstallerMain extends Component {\n  constructor(props) {\n    super(props);\n    this.leftPaneToggleHidden = this.leftPaneToggleHidden.bind(this);\n    this.toggleVerticalNavRollup = this.toggleVerticalNavRollup.bind(this);\n    this.state = {\n      leftPaneHidden: true,\n      hideWorkspaceRollup: true,\n      hideSettingsRollup: true\n    };\n  }\n\n  componentDidMount() {}\n\n  toggleVerticalNavRollup(rollup) {\n    if (rollup === 'workspace') {\n      this.setState({\n        hideWorkspaceRollup: !this.state.hideWorkspaceRollup\n      });\n    } else {\n      this.setState({\n        hideSettingsRollup: !this.state.hideSettingsRollup\n      });\n    }\n  }\n\n  leftPaneToggleHidden() {\n    this.setState({\n      leftPaneHidden: !this.state.leftPaneHidden\n    });\n  }\n\n  render() {\n    let headerContent = this.props.headerContent ? this.props.headerContent : React.createElement(InstallerHeaderControls, {\n      leftPaneToggleHidden: this.leftPaneToggleHidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }); // let headerContent = this.props.headerContent ? this.props.headerContent :\n    //   <HeaderControls leftPaneToggleHidden={this.leftPaneToggleHidden} />\n    // let leftPaneContent = this.props.leftPaneContent ? this.props.leftPaneContent : ''\n\n    let leftPaneContent = React.createElement(InstallerNav, {\n      hidden: this.state.leftPaneHidden,\n      hideWorkspaceRollup: this.state.hideWorkspaceRollup,\n      hideSettingsRollup: this.state.hideSettingsRollup,\n      toggleRollup: this.toggleVerticalNavRollup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n    let rightPaneContent = this.props.rightPaneContent ? this.props.rightPaneContent : '';\n    let footerContent = this.props.footerContent ? this.props.footerContent : React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n\n    if (this.props && this.props.location && this.props.location.pathname) {\n      // console.log('pathname: ' + this.props.location.pathname)\n      // console.log(this.props.config.consoleBuffer)\n      rightPaneContent = React.createElement(InstallerHome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n\n      switch (this.props.location.pathname) {\n        case '/About':\n          rightPaneContent = React.createElement(About, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          });\n          break;\n\n        default:\n          rightPaneContent = React.createElement(InstallerHome, {\n            config: this.props.config,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          });\n      }\n    }\n\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, headerContent), React.createElement(\"div\", {\n      id: \"contentWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, !this.state.leftPaneHidden && React.createElement(\"div\", {\n      className: \"leftPaneContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, leftPaneContent), React.createElement(\"div\", {\n      className: \"rightPaneContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, rightPaneContent)), React.createElement(\"div\", {\n      id: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"footerContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, footerContent)));\n  }\n\n}\n\nexport default InstallerMain;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/web/src/components/Installer/Main.js"],"names":["React","Component","InstallerHome","Footer","InstallerHeaderControls","InstallerNav","About","InstallerMain","constructor","props","leftPaneToggleHidden","bind","toggleVerticalNavRollup","state","leftPaneHidden","hideWorkspaceRollup","hideSettingsRollup","componentDidMount","rollup","setState","render","headerContent","leftPaneContent","rightPaneContent","footerContent","location","pathname","config"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport InstallerHome  from './Home'\nimport Footer from './Footer'\nimport InstallerHeaderControls from './HeaderControls'\nimport InstallerNav  from './VerticalNav'\n\nimport About from '../App/About'\n\n\nimport '../../style.css'\n\nclass InstallerMain extends Component {\n  constructor(props) {\n    super(props)\n\n    this.leftPaneToggleHidden = this.leftPaneToggleHidden.bind(this)\n    this.toggleVerticalNavRollup = this.toggleVerticalNavRollup.bind(this)\n\n    this.state = {\n      leftPaneHidden: true,\n      hideWorkspaceRollup: true,\n      hideSettingsRollup: true,\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  toggleVerticalNavRollup(rollup) {\n    if(rollup === 'workspace') {\n      this.setState({\n        hideWorkspaceRollup: !this.state.hideWorkspaceRollup,\n      })\n    }\n    else {\n      this.setState({\n        hideSettingsRollup: !this.state.hideSettingsRollup,\n      })\n    }\n  }\n\n  leftPaneToggleHidden () {\n    this.setState({\n      leftPaneHidden: !this.state.leftPaneHidden\n    })\n  }\n\n  render() {\n    let headerContent = this.props.headerContent ? this.props.headerContent :\n      <InstallerHeaderControls leftPaneToggleHidden={this.leftPaneToggleHidden} />\n    // let headerContent = this.props.headerContent ? this.props.headerContent :\n    //   <HeaderControls leftPaneToggleHidden={this.leftPaneToggleHidden} />\n    // let leftPaneContent = this.props.leftPaneContent ? this.props.leftPaneContent : ''\n    let leftPaneContent = <InstallerNav hidden={this.state.leftPaneHidden} hideWorkspaceRollup={this.state.hideWorkspaceRollup} hideSettingsRollup={this.state.hideSettingsRollup} toggleRollup={this.toggleVerticalNavRollup} />\n    let rightPaneContent = this.props.rightPaneContent ? this.props.rightPaneContent : ''\n    let footerContent = this.props.footerContent ? this.props.footerContent : <Footer />\n\n    if (this.props && this.props.location && this.props.location.pathname) {\n\n      // console.log('pathname: ' + this.props.location.pathname)\n      // console.log(this.props.config.consoleBuffer)\n\n      rightPaneContent = <InstallerHome />\n\n      switch(this.props.location.pathname) {\n\n        case '/About':\n        rightPaneContent = <About />\n        break\n\n        default:\n          rightPaneContent = <InstallerHome config={this.props.config} />\n      }\n    }\n\n    return (\n      <div id=\"wrapper\">\n         <div id=\"header\">\n           {headerContent}\n         </div>\n         <div id=\"contentWrapper\">\n           { !this.state.leftPaneHidden &&\n             <div className='leftPaneContent'>\n            { leftPaneContent }\n             </div>\n           }\n           <div className='rightPaneContent'>\n           {rightPaneContent}\n           </div>\n        </div>\n         <div id=\"footer\">\n            <div className='footerContent'>{footerContent}</div>\n         </div>\n       </div>\n    )\n  }\n}\nexport default InstallerMain\n"]},"metadata":{},"sourceType":"module"}