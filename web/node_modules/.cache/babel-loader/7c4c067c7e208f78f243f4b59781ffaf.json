{"ast":null,"code":"\"use strict\"; // {{{1 Galois Field Math\n\nvar GF256_BASE = 285;\nvar EXP_TABLE = [1];\nvar LOG_TABLE = [];\n\nfor (var i = 1; i < 256; i++) {\n  var n = EXP_TABLE[i - 1] << 1;\n  if (n > 255) n = n ^ GF256_BASE;\n  EXP_TABLE[i] = n;\n}\n\nfor (var i = 0; i < 255; i++) {\n  LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nfunction exp(k) {\n  while (k < 0) k += 255;\n\n  while (k > 255) k -= 255;\n\n  return EXP_TABLE[k];\n}\n\nfunction log(k) {\n  if (k < 1 || k > 255) {\n    throw Error('Bad log(' + k + ')');\n  }\n\n  return LOG_TABLE[k];\n} // {{{1 Generator Polynomials\n\n\nvar POLYNOMIALS = [[0], // a^0 x^0\n[0, 0], // a^0 x^1 + a^0 x^0\n[0, 25, 1]];\n\nfunction generatorPolynomial(num) {\n  if (POLYNOMIALS[num]) {\n    return POLYNOMIALS[num];\n  }\n\n  var prev = generatorPolynomial(num - 1);\n  var res = [];\n  res[0] = prev[0];\n\n  for (var i = 1; i <= num; i++) {\n    res[i] = log(exp(prev[i]) ^ exp(prev[i - 1] + num - 1));\n  }\n\n  POLYNOMIALS[num] = res;\n  return res;\n} // {{{1 export functions\n\n\nmodule.exports = function calculate_ec(msg, ec_len) {\n  // `msg` could be array or buffer\n  // convert `msg` to array\n  msg = [].slice.call(msg); // Generator Polynomial\n\n  var poly = generatorPolynomial(ec_len);\n\n  for (var i = 0; i < ec_len; i++) msg.push(0);\n\n  while (msg.length > ec_len) {\n    if (!msg[0]) {\n      msg.shift();\n      continue;\n    }\n\n    var log_k = log(msg[0]);\n\n    for (var i = 0; i <= ec_len; i++) {\n      msg[i] = msg[i] ^ exp(poly[i] + log_k);\n    }\n\n    msg.shift();\n  }\n\n  return new Buffer(msg);\n};","map":null,"metadata":{},"sourceType":"script"}