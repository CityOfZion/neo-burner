{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/Ui/Modal/DownloadHtmlTemplate.js\";\nimport React, { Component, useState } from 'react';\nimport { Form, FormGroup, Input, Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap'; // import './style.css'\n\nclass DownloadHtmlTemplateModal extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.save = this.save.bind(this); // this.nextButtonClick = this.nextButtonClick.bind(this)\n    // this.onNextClick = this.onNextClick.bind(this)\n    // this.cancelButtonClick = this.cancelButtonClick.bind(this)\n    // this.onCancelClick = this.onCancelClick.bind(this)\n\n    this.state = {\n      modal: false,\n      folder: this.props.folder,\n      filename: 'template.html'\n    };\n  }\n\n  componentDidMount() {}\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    }); // if (this.props.onNextClick) this.props.onNextClick()\n    // if (this.props.onCancelClick) this.props.onCancelClick()\n  }\n\n  save() {\n    let options = {\n      src: this.props.config.userData + '/' + this.state.filename,\n      dest: this.state.folder + '/' + this.state.filename\n    };\n    window.ipcRenderer.send('copy-file', options);\n    console.log('send ipc copy-file: ' + options.src + ' to ' + options.dest);\n    this.toggle();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Save Template\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.title), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Press save to select where to store the default template.html. You can then customize this file and upload it to change the default PDF layout.\", React.createElement(Container, {\n      className: \"p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"modalFormLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"upload_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      directory: \"\",\n      webkitdirectory: \"\",\n      type: \"file\",\n      id: \"ma\",\n      onChange: this.setState({\n        folder: document.getElementsByTagName('input')[0].files[0].path\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Choose Path\"), ' ' + this.state.folder))))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"warning\",\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Save\"), ' '))));\n  }\n\n}\n\nexport default DownloadHtmlTemplateModal;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/Ui/Modal/DownloadHtmlTemplate.js"],"names":["React","Component","useState","Form","FormGroup","Input","Container","Button","Modal","ModalHeader","ModalBody","ModalFooter","ButtonGroup","DownloadHtmlTemplateModal","constructor","props","toggle","bind","save","state","modal","folder","filename","componentDidMount","setState","options","src","config","userData","dest","window","ipcRenderer","send","console","log","render","title","document","getElementsByTagName","files","path"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Form, FormGroup, Input, Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap'\n// import './style.css'\n\nclass DownloadHtmlTemplateModal extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.save = this.save.bind(this)\n    // this.nextButtonClick = this.nextButtonClick.bind(this)\n    // this.onNextClick = this.onNextClick.bind(this)\n    // this.cancelButtonClick = this.cancelButtonClick.bind(this)\n    // this.onCancelClick = this.onCancelClick.bind(this)\n\n    this.state = {\n      modal: false,\n      folder: this.props.folder,\n      filename: 'template.html',\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  toggle() {\n\n    this.setState({ modal: !this.state.modal })\n    // if (this.props.onNextClick) this.props.onNextClick()\n    // if (this.props.onCancelClick) this.props.onCancelClick()\n  }\n\n  save() {\n    let options = {\n      src: this.props.config.userData+'/'+this.state.filename, dest: this.state.folder+'/'+this.state.filename\n    }\n    window.ipcRenderer.send('copy-file', options)\n    console.log('send ipc copy-file: '+options.src +' to '+options.dest)\n    this.toggle()\n  }\n\n  render() {\n    return(\n      <div>\n        <Button color=\"danger\" onClick={this.toggle}>Save Template</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>{this.props.title}</ModalHeader>\n          <ModalBody>\n            <div id=\"\">\n              Press save to select where to store the default template.html. You can then customize this file and upload it to change\n              the default PDF layout.\n              <Container className=\"p-5\" >\n                <Form id=\"modalFormLeft\">\n                  <FormGroup>\n                    <div id=\"upload_button\">\n                      <label>\n                        <input directory=\"\" webkitdirectory=\"\" type=\"file\" id=\"ma\"\n                          onChange={this.setState({ folder: document.getElementsByTagName('input')[0].files[0].path })}\n                          />\n                        <span class=\"btn btn-primary\">Choose Path</span>\n                        {' '+this.state.folder}\n                      </label>\n                    </div>\n                  </FormGroup>\n                </Form>\n              </Container>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <ButtonGroup>\n              <Button color=\"warning\" onClick={this.save}>Save</Button>{' '}\n            </ButtonGroup>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default DownloadHtmlTemplateModal\n"]},"metadata":{},"sourceType":"module"}