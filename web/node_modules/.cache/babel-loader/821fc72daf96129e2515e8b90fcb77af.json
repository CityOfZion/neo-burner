{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/Ui/Modal/DownloadHtmlTemplate.js\";\nimport React, { Component, useState } from 'react';\nimport { Form, FormGroup, Input, Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap'; // import './style.css'\n\nconst dialog = window.require('electron').remote.dialog;\n\nclass DownloadHtmlTemplateModal extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.save = this.save.bind(this); // this.nextButtonClick = this.nextButtonClick.bind(this)\n    // this.onNextClick = this.onNextClick.bind(this)\n    // this.cancelButtonClick = this.cancelButtonClick.bind(this)\n    // this.onCancelClick = this.onCancelClick.bind(this)\n\n    this.state = {\n      modal: false,\n      folder: this.props.config.userData + '/',\n      filename: 'template.html'\n    };\n  }\n\n  componentDidMount() {}\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    }); // if (this.props.onNextClick) this.props.onNextClick()\n    // if (this.props.onCancelClick) this.props.onCancelClick()\n  }\n\n  save() {\n    // let data\n    // fileDownload(this.props.config.userData+'/'+this.state.filename, this.props.config.userData )\n    dialog.showOpenDialog({\n      // dialog.showSaveDialog({\n      properties: ['openFile', 'multiSelections'],\n      defaultPath: this.props.config.userData + '/'\n    }, function (files) {\n      if (files !== undefined) {// handle files\n      }\n    }); // dialog.showOpenDialog({\n    //   properties: ['openFile', 'multiSelections']\n    //   }, function (files) {\n    //       if (files !== undefined) {\n    //           // handle files\n    //       }\n    //   })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.title), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Press save to select where to store the default template.html. You can then customize the file and upload it to change the default PDF layout.\", React.createElement(Container, {\n      className: \"p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"modalFormLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"warning\",\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Save\"), ' ', React.createElement(Button, {\n      color: \"warning\",\n      onClick: this.props.onCancelClick ? this.props.onCancelClick : this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.cancelButtonText)))));\n  }\n\n}\n\nexport default DownloadHtmlTemplateModal;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/Ui/Modal/DownloadHtmlTemplate.js"],"names":["React","Component","useState","Form","FormGroup","Input","Container","Button","Modal","ModalHeader","ModalBody","ModalFooter","ButtonGroup","dialog","window","require","remote","DownloadHtmlTemplateModal","constructor","props","toggle","bind","save","state","modal","folder","config","userData","filename","componentDidMount","setState","showOpenDialog","properties","defaultPath","files","undefined","render","title","onCancelClick","cancelButtonText"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Form, FormGroup, Input, Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap'\n// import './style.css'\nconst { dialog } = window.require('electron').remote\n\n\n\nclass DownloadHtmlTemplateModal extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.save = this.save.bind(this)\n    // this.nextButtonClick = this.nextButtonClick.bind(this)\n    // this.onNextClick = this.onNextClick.bind(this)\n    // this.cancelButtonClick = this.cancelButtonClick.bind(this)\n    // this.onCancelClick = this.onCancelClick.bind(this)\n\n    this.state = {\n      modal: false,\n      folder: this.props.config.userData+'/',\n      filename: 'template.html',\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  toggle() {\n\n    this.setState({ modal: !this.state.modal })\n    // if (this.props.onNextClick) this.props.onNextClick()\n    // if (this.props.onCancelClick) this.props.onCancelClick()\n  }\n\n  save() {\n    // let data\n    // fileDownload(this.props.config.userData+'/'+this.state.filename, this.props.config.userData )\n    dialog.showOpenDialog({\n    // dialog.showSaveDialog({\n      properties: ['openFile', 'multiSelections'],\n      defaultPath: this.props.config.userData+'/',\n      }, function (files) {\n          if (files !== undefined) {\n              // handle files\n          }\n      })\n    // dialog.showOpenDialog({\n    //   properties: ['openFile', 'multiSelections']\n    //   }, function (files) {\n    //       if (files !== undefined) {\n    //           // handle files\n    //       }\n    //   })\n  }\n\n  render() {\n    return(\n      <div>\n        <Button color=\"danger\" onClick={this.toggle}>Save</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>{this.props.title}</ModalHeader>\n          <ModalBody>\n            <div id=\"\">\n              Press save to select where to store the default template.html. You can then customize the file and upload it to change\n              the default PDF layout.\n              <Container className=\"p-5\" >\n                <Form id=\"modalFormLeft\">\n                  <FormGroup>\n\n\n                  </FormGroup>\n                </Form>\n              </Container>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <ButtonGroup>\n              <Button color=\"warning\" onClick={this.save}>Save</Button>{' '}\n              <Button color=\"warning\" onClick={this.props.onCancelClick ? this.props.onCancelClick : this.toggle}>{this.props.cancelButtonText}</Button>\n            </ButtonGroup>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default DownloadHtmlTemplateModal\n"]},"metadata":{},"sourceType":"module"}