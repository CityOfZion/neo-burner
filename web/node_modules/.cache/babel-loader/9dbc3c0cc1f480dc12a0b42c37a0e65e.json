{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/App/CustomizePdf.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport BurnerModal from '../Ui/Modal/Modal';\nimport FlashButton from '../Ui/FlashButton/FlashButton';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport PDF from './PDF.js';\nimport ReactToPrint from 'react-to-print';\nimport PrintTemplate from 'react-print';\nimport { QRCode } from 'react-qr-svg';\nimport { bip39 } from 'bip39';\nimport util from 'util';\n\nconst electron = window.require('electron');\n\nclass CustomizePdf extends Component {\n  constructor(props) {\n    super(props);\n    this.goToAccounts = this.goToAccounts.bind(this);\n    this.createPdf = this.createPdf.bind(this);\n    this.viewPdf = this.viewPdf.bind(this);\n    this.customizePdf = this.customizePdf.bind(this);\n    this.state = {\n      folder: '/tmp',\n      filename: 'wallets.pdf',\n      generatingPdf: false,\n      pdfExists: false\n    };\n  }\n\n  componentDidMount() {\n    // console.log('accountsPath: '+util.inspect(this.props.config, {depth: null}))\n    this.setState({\n      folder: this.props.folder,\n      pdfExists: this.props.state.pdfExists\n    });\n    electron.ipcRenderer.on('pdf-created', (event, arg) => {\n      console.log('ipc pdf-created');\n      this.props.setPdfPath(this.state.folder + '/', this.state.filename);\n      this.state.generatingPdf = false;\n      this.state.pdfExists = true;\n      this.props.history.push('Wallets');\n    });\n  }\n\n  goToAccounts() {\n    this.props.history.push('Accounts');\n  }\n\n  createPdf() {\n    this.state.generatingPdf = true;\n    this.props.history.push('Wallets'); // this.props.history.push('PDF')\n\n    window.ipcRenderer.send('create-pdf', {\n      path: this.state.folder + '/',\n      filename: this.state.filename,\n      data: this.props.accounts\n    });\n    console.log('wallet folder: ' + this.state.folder + '/' + this.state.filename);\n  }\n\n  viewPdf() {\n    this.props.history.push('PDF');\n  }\n\n  customizePdf() {}\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"vertical-center\",\n      id: \"ma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container hero-container text-center\",\n      id: \"ma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Wallets \"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"lead mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"accountsFormLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"upload_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      directory: \"\",\n      webkitdirectory: \"\",\n      type: \"file\",\n      id: \"ma\",\n      onChange: e => this.setState({\n        folder: document.getElementsByTagName('input')[0].files[0].path\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Choose Path\"), ' ' + this.state.folder)), React.createElement(Input, {\n      style: {\n        width: \"400px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"File Name\",\n      value: this.state.filename,\n      onChange: e => this.setState({\n        filename: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(FlashButton, {\n      buttonLabel: \"Create PDF\",\n      title: 'Burn Notice',\n      message: 'Please wait while a PDF containing ' + this.props.accounts.length + ' wallets is being generated at ' + this.state.folder + '/' + this.state.filename,\n      open: this.state.generatingPdf,\n      onClick: this.createPdf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.customizePdf,\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Customize PDF\"), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), this.state.pdfExists ? React.createElement(Button, {\n      onClick: this.viewPdf,\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"View PDF\") : ''))))));\n  }\n\n}\n\nexport default CustomizePdf;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/App/CustomizePdf.js"],"names":["React","Component","Jumbotron","Button","Form","FormGroup","Input","Container","BurnerModal","FlashButton","PDFDownloadLink","PDF","ReactToPrint","PrintTemplate","QRCode","bip39","util","electron","window","require","CustomizePdf","constructor","props","goToAccounts","bind","createPdf","viewPdf","customizePdf","state","folder","filename","generatingPdf","pdfExists","componentDidMount","setState","ipcRenderer","on","event","arg","console","log","setPdfPath","history","push","send","path","data","accounts","render","e","document","getElementsByTagName","files","width","target","value","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Jumbotron, Button, Form, FormGroup, Input, Container } from 'reactstrap'\nimport BurnerModal from '../Ui/Modal/Modal'\nimport FlashButton from '../Ui/FlashButton/FlashButton'\n\nimport { PDFDownloadLink } from '@react-pdf/renderer'\n\nimport PDF from './PDF.js'\n\nimport ReactToPrint from 'react-to-print'\nimport PrintTemplate from 'react-print'\n\nimport { QRCode } from 'react-qr-svg'\nimport { bip39 } from 'bip39'\n\nimport util from 'util'\n\nconst electron = window.require('electron')\n\nclass CustomizePdf extends Component {\n  constructor(props) {\n    super(props)\n\n    this.goToAccounts = this.goToAccounts.bind(this)\n    this.createPdf = this.createPdf.bind(this)\n    this.viewPdf = this.viewPdf.bind(this)\n    this.customizePdf = this.customizePdf.bind(this)\n\n    this.state = {\n      folder: '/tmp',\n      filename: 'wallets.pdf',\n      generatingPdf: false,\n      pdfExists: false\n    }\n  }\n\n  componentDidMount() {\n    // console.log('accountsPath: '+util.inspect(this.props.config, {depth: null}))\n    this.setState({ folder: this.props.folder, pdfExists: this.props.state.pdfExists })\n\n    electron.ipcRenderer.on('pdf-created', (event, arg) => {\n      console.log('ipc pdf-created')\n      this.props.setPdfPath(this.state.folder+'/', this.state.filename)\n      this.state.generatingPdf = false\n      this.state.pdfExists = true\n      this.props.history.push('Wallets')\n    })\n  }\n\n  goToAccounts() {\n    this.props.history.push('Accounts')\n  }\n\n  createPdf() {\n    this.state.generatingPdf = true\n    this.props.history.push('Wallets')\n    // this.props.history.push('PDF')\n    window.ipcRenderer.send('create-pdf', { path: this.state.folder+'/', filename: this.state.filename, data: this.props.accounts })\n    console.log('wallet folder: '+this.state.folder+'/'+this.state.filename)\n  }\n\n  viewPdf() {\n    this.props.history.push('PDF')\n  }\n\n  customizePdf() {\n\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n        <Jumbotron className=\"vertical-center\" id=\"ma\">\n        <div className=\"container hero-container text-center\" id=\"ma\">\n          <h1 className=\"display-4\">Wallets </h1>\n          <p className=\"lead\"></p>\n          <hr className=\"my-4\" />\n          <p className=\"lead mx-auto\">\n            <Container className=\"p-5\">\n              <Form id=\"accountsFormLeft\">\n                <FormGroup>\n                  <div id=\"upload_button\">\n                    <label>\n                      <input directory=\"\" webkitdirectory=\"\" type=\"file\" id=\"ma\"\n                        onChange={e => this.setState({ folder: document.getElementsByTagName('input')[0].files[0].path })}\n                        />\n                      <span class=\"btn btn-primary\">Choose Path</span>\n                      {' '+this.state.folder}\n                    </label>\n                  </div>\n                  <Input\n                    style={{width: \"400px\"}}\n                    type=\"text\"\n                    name=\"text\"\n                    placeholder=\"File Name\"\n                    value={this.state.filename}\n                    onChange={e => this.setState({ filename: e.target.value })}\n                  />\n                </FormGroup>\n                <FlashButton buttonLabel='Create PDF' title={'Burn Notice'} message={'Please wait while a PDF containing '+this.props.accounts.length+' wallets is being generated at '+this.state.folder+'/'+this.state.filename} open={this.state.generatingPdf} onClick={this.createPdf}/>\n                <br/>\n                <Button onClick={this.customizePdf} color=\"warning\" >Customize PDF</Button>\n                {' '}\n                <br/>\n                {this.state.pdfExists ? <Button onClick={this.viewPdf} color=\"warning\" >View PDF</Button> : ''}\n              </Form>\n            </Container>\n          </p>\n        </div>\n        </Jumbotron>\n      </React.Fragment>\n    )\n  }\n}\nexport default CustomizePdf\n"]},"metadata":{},"sourceType":"module"}