{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/App/Accounts.js\";\nimport React, { Component } from 'react';\nimport { ButtonDropdown, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Jumbotron, Container, Button, Form, FormGroup, Input, ButtonGroup } from 'reactstrap';\nimport { generateAccounts } from '../../neo-paper/accounts.js';\nimport util from 'util';\nimport './style.css';\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.renderGenerateAccounts = this.renderGenerateAccounts.bind(this);\n    this.createWallet = this.createWallet.bind(this);\n    this.dropdownOpen = this.dropdownOpen.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      amount: '',\n      name: '',\n      url: '',\n      payout: '',\n      folder: '/tmp',\n      filename: 'accounts.json',\n      dropDownOpen: fals\n    };\n  }\n\n  componentDidMount() {}\n\n  onFormSubmit(e) {\n    console.log('Generating: ' + this.state.amount);\n    console.log('Name: ' + this.state.name);\n    console.log('URL: ' + this.state.url);\n    console.log('Payout: ' + this.state.payout);\n    console.log('fakepath: ' + this.state.folder);\n    let realpath;\n    if (document.getElementsByTagName('input')[0].files[0]) realpath = document.getElementsByTagName('input')[0].files[0].path;else realpath = '/tmp';\n    console.log('realpath: ' + realpath);\n    this.state.folder = realpath;\n    console.log('filename: ' + this.state.filename);\n    let accounts = generateAccounts(this.state.amount, this.state.name, this.state.url, this.state.payout);\n    this.props.setAccounts(accounts, realpath, this.state.filename);\n    window.ipcRenderer.send('write-file', {\n      path: realpath + '/' + this.state.filename,\n      data: JSON.stringify(accounts).toString()\n    });\n  }\n\n  createWallet() {\n    this.props.history.push('Wallets');\n  }\n\n  dropdownOpen() {}\n\n  toggle() {}\n\n  renderGenerateAccounts() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"vertical-center\",\n      id: \"ma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container hero-container text-center\",\n      id: \"ma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Accounts \"), React.createElement(\"p\", {\n      className: \"lead\",\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Generate  accounts (WARNING: files are overwritten!)\"), React.createElement(Container, {\n      className: \"p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"accountsFormLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"upload_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      directory: \"\",\n      webkitdirectory: \"\",\n      type: \"file\",\n      id: \"ma\",\n      onChange: e => this.setState({\n        folder: document.getElementsByTagName('input')[0].files[0].path\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"btn btn-primary\",\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Choose Path\"), React.createElement(\"span\", {\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, ' ' + this.state.folder))), React.createElement(Input, {\n      style: {\n        width: \"400px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"File Name\",\n      value: this.state.filename,\n      onChange: e => this.setState({\n        filename: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"400px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Event Name\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"400px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Event URL\",\n      value: this.state.url,\n      onChange: e => this.setState({\n        url: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"200px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Event Payout\",\n      value: this.state.payout,\n      onChange: e => this.setState({\n        payout: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, 'Dropdown'), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      header: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, 'Header'), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, 'Some Action'), React.createElement(DropdownItem, {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, 'Action (disabled)', \"'\"), React.createElement(DropdownItem, {\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, 'Foo Action'), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, 'Bar Action'), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, 'Quo Action'))), React.createElement(Input, {\n      style: {\n        width: \"200px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"How many accounts?\",\n      value: this.state.amount,\n      onChange: e => this.setState({\n        amount: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: e => this.onFormSubmit(e),\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Generate\"))))));\n  }\n\n  render() {\n    if (!this.props.accounts.length) {\n      return this.renderGenerateAccounts();\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        className: \"vertical-center\",\n        id: \"ma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container hero-container text-center\",\n        id: \"ma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Accounts \"), React.createElement(\"p\", {\n        className: \"lead\",\n        id: \"fourteenFont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"There are \", this.props.accounts.length, \" accounts.\"), React.createElement(\"p\", {\n        className: \"lead mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"accountsTextArea\",\n        disabled: true,\n        cols: \"100\",\n        rows: \"40\",\n        name: \"accounts\",\n        value: util.inspect(this.props.accounts, {\n          depth: null\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.props.clearAccounts,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Clear\"), ' ', React.createElement(Button, {\n        onClick: this.createWallet,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Create Wallet\")))))));\n    }\n  }\n\n}\n\nexport default Accounts;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/App/Accounts.js"],"names":["React","Component","ButtonDropdown","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Jumbotron","Container","Button","Form","FormGroup","Input","ButtonGroup","generateAccounts","util","Accounts","constructor","props","onFormSubmit","bind","renderGenerateAccounts","createWallet","dropdownOpen","toggle","state","amount","name","url","payout","folder","filename","dropDownOpen","fals","componentDidMount","e","console","log","realpath","document","getElementsByTagName","files","path","accounts","setAccounts","window","ipcRenderer","send","data","JSON","stringify","toString","history","push","setState","width","target","value","render","length","inspect","depth","clearAccounts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ButtonDropdown, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Jumbotron, Container, Button, Form, FormGroup, Input, ButtonGroup } from 'reactstrap'\nimport { generateAccounts } from '../../neo-paper/accounts.js'\n\nimport util from 'util'\n\nimport './style.css'\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props)\n\n    this.onFormSubmit = this.onFormSubmit.bind(this)\n    this.renderGenerateAccounts = this.renderGenerateAccounts.bind(this)\n    this.createWallet = this.createWallet.bind(this)\n    this.dropdownOpen = this.dropdownOpen.bind(this)\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      amount: '',\n      name: '',\n      url: '',\n      payout: '',\n      folder: '/tmp',\n      filename: 'accounts.json',\n      dropDownOpen: fals\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  onFormSubmit(e) {\n    console.log('Generating: '+this.state.amount)\n    console.log('Name: '+this.state.name)\n    console.log('URL: '+this.state.url)\n    console.log('Payout: '+this.state.payout)\n    console.log('fakepath: '+this.state.folder)\n\n    let realpath\n\n    if (document.getElementsByTagName('input')[0].files[0])\n      realpath = document.getElementsByTagName('input')[0].files[0].path\n    else realpath = '/tmp'\n\n    console.log('realpath: '+realpath)\n\n    this.state.folder = realpath\n\n    console.log('filename: '+this.state.filename)\n\n    let accounts = generateAccounts(this.state.amount, this.state.name, this.state.url, this.state.payout)\n\n    this.props.setAccounts(accounts, realpath, this.state.filename)\n\n    window.ipcRenderer.send('write-file', { path: realpath+'/'+this.state.filename, data: JSON.stringify(accounts).toString() })\n  }\n\n  createWallet() {\n    this.props.history.push('Wallets')\n  }\n\n  dropdownOpen() {\n\n  }\n\n  toggle() {\n\n  }\n\n  renderGenerateAccounts() {\n    return(\n      <React.Fragment>\n        <Jumbotron className=\"vertical-center\" id=\"ma\">\n        <div className=\"container hero-container text-center\" id=\"ma\">\n          <h2 className=\"display-4\">Accounts </h2>\n          <p className=\"lead\" id=\"fourteenFont\">Generate  accounts (WARNING: files are overwritten!)</p>\n          <Container className=\"p-5\">\n             <Form id=\"accountsFormLeft\">\n               <FormGroup>\n                 <div id=\"upload_button\">\n                   <label>\n                     <input directory=\"\" webkitdirectory=\"\" type=\"file\" id=\"ma\"\n                       onChange={e => this.setState({ folder: document.getElementsByTagName('input')[0].files[0].path })}\n                       />\n                     <span class=\"btn btn-primary\" id=\"fourteenFont\">Choose Path</span>\n                     <span id=\"fourteenFont\">{' '+this.state.folder}</span>\n                   </label>\n                 </div>\n                 <Input\n                   style={{width: \"400px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"File Name\"\n                   value={this.state.filename}\n                   onChange={e => this.setState({ filename: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n                 <Input\n                   style={{width: \"400px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"Event Name\"\n                   value={this.state.name}\n                   onChange={e => this.setState({ name: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n                 <Input\n                   style={{width: \"400px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"Event URL\"\n                   value={this.state.url}\n                   onChange={e => this.setState({ url: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n                 <Input\n                   style={{width: \"200px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"Event Payout\"\n                   value={this.state.payout}\n                   onChange={e => this.setState({ payout: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n                 <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                    <DropdownToggle caret>\n                      {'Dropdown'}\n                      </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem header>{'Header'}</DropdownItem>\n                      <DropdownItem>{'Some Action'}</DropdownItem>\n                      <DropdownItem disabled>{'Action (disabled)'}'</DropdownItem>\n                      <DropdownItem divider />\n                      <DropdownItem>{'Foo Action'}</DropdownItem>\n                      <DropdownItem>{'Bar Action'}</DropdownItem>\n                      <DropdownItem>{'Quo Action'}</DropdownItem>\n                    </DropdownMenu>\n                 </Dropdown>\n                 <Input\n                   style={{width: \"200px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"How many accounts?\"\n                   value={this.state.amount}\n                   onChange={e => this.setState({ amount: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n               </FormGroup>\n               <Button onClick={e => this.onFormSubmit(e)} color=\"warning\">Generate</Button>\n             </Form>\n           </Container>\n        </div>\n        </Jumbotron>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    if (!this.props.accounts.length) {\n      return(this.renderGenerateAccounts())\n    } else {\n      return(\n        <React.Fragment>\n          <Jumbotron className=\"vertical-center\" id=\"ma\">\n          <div className=\"container hero-container text-center\" id=\"ma\">\n            <h1 className=\"display-4\">Accounts </h1>\n            <p className=\"lead\" id=\"fourteenFont\">There are {this.props.accounts.length} accounts.</p>\n            <p className=\"lead mx-auto\">\n            <Container className=\"p-5\">\n               <textarea\n                id=\"accountsTextArea\"\n                disabled\n                cols=\"100\"\n                rows=\"40\"\n                name=\"accounts\"\n                value={util.inspect(this.props.accounts, {depth:null})}/>\n                <br/>\n                <ButtonGroup>\n                <Button onClick={this.props.clearAccounts} color=\"warning\" >Clear</Button>{' '}\n                <Button onClick={this.createWallet} color=\"warning\" >Create Wallet</Button>\n                </ButtonGroup>\n             </Container>\n            </p>\n          </div>\n          </Jumbotron>\n        </React.Fragment>\n      )\n    }\n  }\n}\nexport default Accounts\n"]},"metadata":{},"sourceType":"module"}