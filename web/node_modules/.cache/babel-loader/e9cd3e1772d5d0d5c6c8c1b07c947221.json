{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/App/Settings.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Form, FormGroup, Label, Input } from 'reactstrap'; // import './style-light.css'\n// let style\n// var remote = window.require('electron').remote\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.state = {};\n  }\n\n  handleCheckBoxChange(event) {// window.ipcRenderer.send('use-sails', event.target.checked)\n    //\n    // remote.getGlobal('serverConfig').useSails = event.target.checked\n    // console.log('useSails set to : '+remote.getGlobal('serverConfig').useSails)\n  }\n\n  componentWillMount() {// if (this.props.darkMode) {\n    //   console.log('going dark')\n    //   require('./style.css')\n    // } else {\n    //   require('./style-light.css')\n    // }\n  }\n\n  changeMode() {\n    if (this.props.darkMode) {\n      // style = {\n      //   body: {\n      //     /* display: flex; */\n      //     /* flex-direction: column; */\n      //     /* min-height: 100vh; */\n      //     /* height: 100%; */\n      //     /* width: 100%; */\n      //     'background-color': 'black'\n      //   },\n      //   ma: {\n      //     'background-color': 'black',\n      //     color: 'white'\n      //   },\n      //   formLeft: {\n      //       'text-align': 'left',\n      //       'padding-left': '35%'\n      //   },\n      //   accountsFormLeft: {\n      //       'text-align': 'left',\n      //       'padding-left': '40%'\n      //   },\n      //   accountsTextArea: {\n      //       height: '200px',\n      //       'max-height': '200px',\n      //       'font-size': '10px'\n      //   }\n      // }\n      return 'checked';\n    } else {\n      // style = {\n      //   body: {\n      //     /* display: flex; */\n      //     /* flex-direction: column; */\n      //     /* min-height: 100vh; */\n      //     /* height: 100%; */\n      //     /* width: 100%; */\n      //     'background-color': 'white'\n      //   },\n      //   ma: {\n      //     'background-color': 'white',\n      //     color: 'black'\n      //   },\n      //   formLeft: {\n      //       'text-align': 'left',\n      //       'padding-left': '35%'\n      //   },\n      //   accountsFormLeft: {\n      //       'text-align': 'left',\n      //       'padding-left': '40%'\n      //   },\n      //   accountsTextArea: {\n      //       height: '200px',\n      //       'max-height': '200px',\n      //       'font-size': '10px'\n      //   }\n      // }\n      return '';\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"vertical-center\",\n      id: \"ma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container hero-container text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Settings \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"formLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      check: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      onChange: this.props.setDarkMode,\n      checked: this.changeMode(),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \" Dark Mode\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))))), React.createElement(\"hr\", {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"lead mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/App/Settings.js"],"names":["React","Component","Jumbotron","Form","FormGroup","Label","Input","Settings","constructor","props","handleCheckBoxChange","bind","changeMode","state","event","componentWillMount","darkMode","render","setDarkMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,KAArC,EAA4CC,KAA5C,QAAyD,YAAzD,C,CAEA;AAEA;AAEA;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKE,KAAL,GAAa,EAAb;AAED;;AAEDH,EAAAA,oBAAoB,CAACI,KAAD,EAAQ,CAE1B;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,kBAAkB,GAAG,CACnB;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDH,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKH,KAAL,CAAWO,QAAf,EAAyB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aAAO,SAAP;AACD,KA9BD,MA8BO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAO,EAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAuC,MAAA,EAAE,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,MAAM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,EAAE,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,WAA5C;AAAyD,MAAA,OAAO,EAAE,KAAKN,UAAL,EAAlE;AAAqF,MAAA,EAAE,EAAC,cAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CADA,CAHF,EAaE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADA,CADF,CADF;AAuBD;;AAnH8B;;AAsHjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Jumbotron, Form, FormGroup, Label, Input } from 'reactstrap'\n\n// import './style-light.css'\n\n// let style\n\n// var remote = window.require('electron').remote\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this)\n    this.changeMode = this.changeMode.bind(this)\n\n    this.state = {\n    }\n  }\n\n  handleCheckBoxChange(event) {\n\n    // window.ipcRenderer.send('use-sails', event.target.checked)\n    //\n    // remote.getGlobal('serverConfig').useSails = event.target.checked\n    // console.log('useSails set to : '+remote.getGlobal('serverConfig').useSails)\n  }\n\n  componentWillMount() {\n    // if (this.props.darkMode) {\n    //   console.log('going dark')\n    //   require('./style.css')\n    // } else {\n    //   require('./style-light.css')\n    // }\n  }\n\n  changeMode() {\n    if (this.props.darkMode) {\n      // style = {\n      //   body: {\n      //     /* display: flex; */\n      //     /* flex-direction: column; */\n      //     /* min-height: 100vh; */\n      //     /* height: 100%; */\n      //     /* width: 100%; */\n      //     'background-color': 'black'\n      //   },\n      //   ma: {\n      //     'background-color': 'black',\n      //     color: 'white'\n      //   },\n      //   formLeft: {\n      //       'text-align': 'left',\n      //       'padding-left': '35%'\n      //   },\n      //   accountsFormLeft: {\n      //       'text-align': 'left',\n      //       'padding-left': '40%'\n      //   },\n      //   accountsTextArea: {\n      //       height: '200px',\n      //       'max-height': '200px',\n      //       'font-size': '10px'\n      //   }\n      // }\n\n      return 'checked'\n    } else {\n      // style = {\n      //   body: {\n      //     /* display: flex; */\n      //     /* flex-direction: column; */\n      //     /* min-height: 100vh; */\n      //     /* height: 100%; */\n      //     /* width: 100%; */\n      //     'background-color': 'white'\n      //   },\n      //   ma: {\n      //     'background-color': 'white',\n      //     color: 'black'\n      //   },\n      //   formLeft: {\n      //       'text-align': 'left',\n      //       'padding-left': '35%'\n      //   },\n      //   accountsFormLeft: {\n      //       'text-align': 'left',\n      //       'padding-left': '40%'\n      //   },\n      //   accountsTextArea: {\n      //       height: '200px',\n      //       'max-height': '200px',\n      //       'font-size': '10px'\n      //   }\n      // }\n      return ''\n    }\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n        <Jumbotron className=\"vertical-center\" id=\"ma\">\n        <div className=\"container hero-container text-center\">\n          <h2 className=\"display-4\">Settings </h2>\n          <br/>\n          <p className=\"lead\">\n          <Form id=\"formLeft\">\n            <FormGroup check inline>\n              <Label check id=\"fourteenFont\">\n                <Input type=\"checkbox\" onChange={this.props.setDarkMode} checked={this.changeMode()} id=\"fourteenFont\"/> Dark Mode\n                <br/>\n              </Label>\n            </FormGroup>\n          </Form>\n          </p>\n          <hr className=\"my-4\" />\n          <p className=\"lead mx-auto\">\n          </p>\n        </div>\n        </Jumbotron>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}