{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/Ui/Main/Main.js\";\nimport React, { Component } from 'react';\nimport HeaderControls from '../HeaderControls/HeaderControls';\nimport VerticalNav from '../VerticalNav/VerticalNav';\nimport InstallerHome from '../../Installer/Home';\nimport Accounts from '../../App/Accounts';\nimport Wallets from '../../App/Wallets';\nimport About from '../../App/About';\nimport New from '../../App/New';\nimport Import from '../../App/Import';\nimport Export from '../../App/Export';\nimport Report from '../../App/Report';\nimport Home from '../../App/Home';\nimport Settings from '../../App/Settings';\nimport PDF from '../../App/PDF';\nimport CopyHtmlTemplateModal from '../../App/CopyHtmlTemplate';\nimport UploadHtmlTemplateModal from '../../App/UploadHtmlTemplate';\nimport Footer from '../../Ui/Main/Footer';\nimport util from 'util'; // import './style.css'\n\nconst electron = window.require('electron');\n\nclass AppMain extends Component {\n  constructor(props) {\n    super(props);\n    this.leftPaneToggleHidden = this.leftPaneToggleHidden.bind(this);\n    this.toggleVerticalNavRollup = this.toggleVerticalNavRollup.bind(this);\n    this.setAccounts = this.setAccounts.bind(this);\n    this.clearAccounts = this.clearAccounts.bind(this);\n    this.setPdfPath = this.setPdfPath.bind(this);\n    this.setDarkMode = this.setDarkMode.bind(this);\n    this.setFolder = this.setFolder.bind(this);\n    this.setTemplatePath = this.setTemplatePath.bind(this);\n    this.writeUserSettings = this.writeUserSettings.bind(this);\n    this.state = {\n      leftPaneHidden: true,\n      hideWorkspaceRollup: true,\n      hideSettingsRollup: true,\n      accounts: [],\n      tutorialMode: true,\n      darkMode: 'true',\n      accountsPath: '/tmp',\n      accountsFile: 'accounts.json',\n      templatePath: this.props.config.userData + '/',\n      pdfPath: '/tmp/',\n      pdfFile: 'wallets.pdf',\n      pdfExists: false\n    };\n  }\n\n  componentWillMount() {\n    let self = this;\n    electron.ipcRenderer.on('read-user-settings-reply', function (event, arg) {\n      self.setState({\n        darkMode: arg.darkMode,\n        accountsFile: arg.accountsFile,\n        accountsPath: arg.accountsPath,\n        templatePath: arg.templatePath,\n        pdfPath: arg.pdfPath,\n        pdfFile: arg.pdfFile\n      });\n      console.log('updating user settings from file : ' + util.inspect(arg, {\n        depth: null\n      }));\n    });\n    electron.ipcRenderer.send('read-user-settings');\n  }\n\n  componentWillReceiveProps() {\n    console.log('userData :' + util.inspect(this.props.config, {\n      depth: null\n    }));\n  }\n\n  componentDidMount() {}\n\n  writeUserSettings() {\n    let settings = {\n      darkMode: this.state.darkMode,\n      accountsPath: this.state.accountsPath,\n      accountsFile: this.state.accountsFile,\n      pdfPath: this.state.pdfPath,\n      pdfFile: this.state.pdfFile,\n      templatePath: this.state.templatePath\n    };\n    console.log('updating settings with: ' + util.inspect(settings, {\n      depth: null\n    }));\n    electron.ipcRenderer.send('write-user-settings', settings);\n  }\n\n  async setFolder(folder) {\n    console.log('main setting folder: ' + folder);\n    await this.setState({\n      folder: folder\n    });\n    this.writeUserSettings();\n  }\n\n  async setTemplatePath(folder) {\n    console.log('main setting template folder: ' + folder);\n    await this.setState({\n      templatePath: folder\n    });\n    this.writeUserSettings();\n  }\n\n  async setAccounts(accounts, folder, filename) {\n    console.log('got accounts in main: ' + util.inspect(accounts, {\n      depth: null\n    }));\n    await this.setState({\n      accounts: accounts,\n      accountsPath: folder,\n      accountsFile: filename\n    });\n    this.writeUserSettings();\n  }\n\n  clearAccounts(accounts) {\n    console.log('clearing accounts: ' + this.state.accounts);\n    this.setState({\n      accounts: []\n    });\n  }\n\n  async setPdfPath(folder, file) {\n    console.log('setPdfPath(): ' + folder + file);\n    await this.setState({\n      pdfPath: folder,\n      pdfFile: file,\n      pdfExists: true\n    });\n    this.writeUserSettings();\n  }\n\n  async setDarkMode(e) {\n    // TODO Fix this it only works one way - from dark to light, can't return\n    console.log('darkMode: ' + e.target.checked);\n    await this.setState({\n      darkMode: e.target.checked\n    });\n    this.writeUserSettings();\n\n    if (e.target.checked) {\n      require('./style.css');\n    } else {\n      require('./style-light.css');\n    }\n  }\n\n  toggleVerticalNavRollup(rollup) {\n    if (rollup === 'workspace') {\n      this.setState({\n        hideWorkspaceRollup: !this.state.hideWorkspaceRollup\n      });\n    } else {\n      this.setState({\n        hideSettingsRollup: !this.state.hideSettingsRollup\n      });\n    }\n  }\n\n  leftPaneToggleHidden() {\n    this.setState({\n      leftPaneHidden: !this.state.leftPaneHidden\n    });\n  }\n\n  render() {\n    let headerContent = this.props.headerContent ? this.props.headerContent : React.createElement(HeaderControls, Object.assign({}, this.props, {\n      leftPaneToggleHidden: this.leftPaneToggleHidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })); // let leftPaneContent = this.props.leftPaneContent ? this.props.leftPaneContent : ''\n\n    let leftPaneContent = React.createElement(VerticalNav, {\n      hidden: this.state.leftPaneHidden,\n      hideWorkspaceRollup: this.state.hideWorkspaceRollup,\n      hideSettingsRollup: this.state.hideSettingsRollup,\n      toggleRollup: this.toggleVerticalNavRollup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }); // let leftPaneContent = <VerticalNav hidden={this.state.leftPaneHidden} hideWorkspaceRollup={this.state.hideWorkspaceRollup} hideSettingsRollup={this.state.hideSettingsRollup} toggleRollup={this.toggleVerticalNavRollup} />\n\n    let rightPaneContent = this.props.rightPaneContent ? this.props.rightPaneContent : '';\n    let footerContent = this.props.footerContent ? this.props.footerContent : React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }); // footerContent = 'footer footer footer'\n\n    if (this.props && this.props.location && this.props.location.pathname) {\n      // this.setState({templateFolder: this.props.config.userData+'/'})\n      // console.log(this.props.config.consoleBuffer)\n      rightPaneContent = React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      });\n\n      switch (this.props.location.pathname) {\n        case '/About':\n          rightPaneContent = React.createElement(About, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          });\n          break;\n\n        case '/Accounts':\n          rightPaneContent = React.createElement(Accounts, Object.assign({}, this.props, {\n            setAccounts: this.setAccounts,\n            accounts: this.state.accounts,\n            clearAccounts: this.clearAccounts,\n            accountsFile: this.state.accountsFile,\n            accountsPath: this.state.accountsPath,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }));\n          break;\n\n        case '/Wallets':\n          rightPaneContent = React.createElement(Wallets, Object.assign({\n            accounts: this.state.accounts,\n            config: this.props.config\n          }, this.props, {\n            setPdfPath: this.setPdfPath,\n            setFolder: this.setPdfPath,\n            pdfExists: this.state.pdfExists,\n            templatePath: this.state.templatePath,\n            folder: this.state.pdfPath,\n            filename: this.state.pdfFile,\n            setTemplatePath: this.setTemplatePath,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }));\n          break;\n\n        case '/PDF':\n          rightPaneContent = React.createElement(PDF, Object.assign({\n            accounts: this.state.accounts,\n            config: this.props.config,\n            pdf: this.state.pdfPath + '/' + this.state.pdfFile\n          }, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }));\n          break;\n\n        case '/UploadHtmlTemplate':\n          rightPaneContent = React.createElement(UploadHtmlTemplateModal, Object.assign({\n            config: this.props.config,\n            folder: this.state.uploadFolder,\n            setUploadFolder: this.setUploadFolder\n          }, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }));\n          break;\n\n        case '/CopyHtmlTemplate':\n          rightPaneContent = React.createElement(CopyHtmlTemplateModal, Object.assign({\n            config: this.props.config,\n            folder: this.state.templatePath,\n            setTemplatePath: this.setTemplatePath\n          }, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }));\n          break;\n\n        case '/New':\n          rightPaneContent = React.createElement(New, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          });\n          break;\n\n        case '/Import':\n          rightPaneContent = React.createElement(Import, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          });\n          break;\n\n        case '/Export':\n          rightPaneContent = React.createElement(Export, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236\n            },\n            __self: this\n          });\n          break;\n\n        case '/Report':\n          rightPaneContent = React.createElement(Report, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          });\n          break;\n\n        case '/Settings':\n          rightPaneContent = React.createElement(Settings, {\n            darkMode: this.state.darkMode,\n            setDarkMode: this.setDarkMode,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          });\n          break;\n\n        case '/InstallerHome':\n          rightPaneContent = React.createElement(InstallerHome, {\n            config: this.props.config,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          });\n          break;\n\n        default:\n          rightPaneContent = React.createElement(Home, Object.assign({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          }));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, headerContent), React.createElement(\"div\", {\n      id: \"contentWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, !this.state.leftPaneHidden && React.createElement(\"div\", {\n      className: \"leftPaneContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, leftPaneContent), React.createElement(\"div\", {\n      className: \"rightPaneContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, rightPaneContent)), React.createElement(\"div\", {\n      id: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"footerContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, footerContent)));\n  }\n\n}\n\nexport default AppMain;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/Ui/Main/Main.js"],"names":["React","Component","HeaderControls","VerticalNav","InstallerHome","Accounts","Wallets","About","New","Import","Export","Report","Home","Settings","PDF","CopyHtmlTemplateModal","UploadHtmlTemplateModal","Footer","util","electron","window","require","AppMain","constructor","props","leftPaneToggleHidden","bind","toggleVerticalNavRollup","setAccounts","clearAccounts","setPdfPath","setDarkMode","setFolder","setTemplatePath","writeUserSettings","state","leftPaneHidden","hideWorkspaceRollup","hideSettingsRollup","accounts","tutorialMode","darkMode","accountsPath","accountsFile","templatePath","config","userData","pdfPath","pdfFile","pdfExists","componentWillMount","self","ipcRenderer","on","event","arg","setState","console","log","inspect","depth","send","componentWillReceiveProps","componentDidMount","settings","folder","filename","file","e","target","checked","rollup","render","headerContent","leftPaneContent","rightPaneContent","footerContent","location","pathname","uploadFolder","setUploadFolder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport HeaderControls from '../HeaderControls/HeaderControls'\nimport VerticalNav from '../VerticalNav/VerticalNav'\n\nimport InstallerHome  from '../../Installer/Home'\n\nimport Accounts from '../../App/Accounts'\nimport Wallets from '../../App/Wallets'\nimport About from '../../App/About'\nimport New from '../../App/New'\nimport Import from '../../App/Import'\nimport Export from '../../App/Export'\nimport Report from '../../App/Report'\nimport Home from '../../App/Home'\nimport Settings from '../../App/Settings'\nimport PDF from '../../App/PDF'\n\nimport CopyHtmlTemplateModal from '../../App/CopyHtmlTemplate'\nimport UploadHtmlTemplateModal from '../../App/UploadHtmlTemplate'\n\nimport Footer from '../../Ui/Main/Footer'\n\nimport util from 'util'\n\n// import './style.css'\n\nconst electron = window.require('electron')\n\nclass AppMain extends Component {\n  constructor(props) {\n    super(props)\n\n    this.leftPaneToggleHidden = this.leftPaneToggleHidden.bind(this)\n    this.toggleVerticalNavRollup = this.toggleVerticalNavRollup.bind(this)\n    this.setAccounts = this.setAccounts.bind(this)\n    this.clearAccounts = this.clearAccounts.bind(this)\n    this.setPdfPath = this.setPdfPath.bind(this)\n    this.setDarkMode = this.setDarkMode.bind(this)\n    this.setFolder = this.setFolder.bind(this)\n    this.setTemplatePath = this.setTemplatePath.bind(this)\n    this.writeUserSettings = this.writeUserSettings.bind(this)\n\n    this.state = {\n      leftPaneHidden: true,\n      hideWorkspaceRollup: true,\n      hideSettingsRollup: true,\n      accounts: [],\n      tutorialMode: true,\n      darkMode: 'true',\n      accountsPath: '/tmp',\n      accountsFile: 'accounts.json',\n      templatePath: this.props.config.userData +'/',\n      pdfPath: '/tmp/',\n      pdfFile: 'wallets.pdf',\n      pdfExists: false\n    }\n  }\n\n  componentWillMount() {\n    let self = this\n\n    electron.ipcRenderer.on('read-user-settings-reply', function (event, arg) {\n      self.setState({\n        darkMode: arg.darkMode,\n        accountsFile: arg.accountsFile,\n        accountsPath: arg.accountsPath,\n        templatePath: arg.templatePath,\n        pdfPath: arg.pdfPath,\n        pdfFile: arg.pdfFile\n      })\n      console.log('updating user settings from file : ' + util.inspect(arg, {depth: null}))\n    })\n\n    electron.ipcRenderer.send('read-user-settings')\n  }\n\n  componentWillReceiveProps() {\n    console.log('userData :'+util.inspect(this.props.config, {depth: null}))\n  }\n\n  componentDidMount() {\n  }\n\n  writeUserSettings() {\n    let settings = {\n      darkMode: this.state.darkMode,\n      accountsPath: this.state.accountsPath,\n      accountsFile: this.state.accountsFile,\n      pdfPath: this.state.pdfPath,\n      pdfFile: this.state.pdfFile,\n      templatePath: this.state.templatePath\n    }\n    console.log('updating settings with: '+util.inspect(settings, {depth: null}))\n    electron.ipcRenderer.send('write-user-settings', settings)\n  }\n\n  async setFolder(folder) {\n    console.log('main setting folder: '+folder)\n    await this.setState({folder: folder})\n    this.writeUserSettings()\n  }\n\n  async setTemplatePath(folder) {\n    console.log('main setting template folder: '+folder)\n    await this.setState({templatePath: folder})\n    this.writeUserSettings()\n  }\n\n  async setAccounts(accounts, folder, filename) {\n    console.log('got accounts in main: '+util.inspect(accounts, {depth: null}))\n    await this.setState({\n      accounts: accounts,\n      accountsPath: folder,\n      accountsFile: filename\n    })\n\n    this.writeUserSettings()\n  }\n\n  clearAccounts(accounts) {\n    console.log('clearing accounts: '+this.state.accounts)\n    this.setState({\n      accounts: []\n    })\n  }\n\n  async setPdfPath(folder, file) {\n    console.log('setPdfPath(): '+folder+file)\n    await this.setState({\n      pdfPath: folder,\n      pdfFile: file,\n      pdfExists: true\n    })\n\n    this.writeUserSettings()\n  }\n\n  async setDarkMode(e) {\n    // TODO Fix this it only works one way - from dark to light, can't return\n    console.log('darkMode: '+e.target.checked)\n    await this.setState({ darkMode: e.target.checked })\n\n    this.writeUserSettings()\n\n    if (e.target.checked) {\n      require('./style.css')\n\n    } else {\n      require('./style-light.css')\n    }\n  }\n\n  toggleVerticalNavRollup(rollup) {\n    if(rollup === 'workspace') {\n      this.setState({\n        hideWorkspaceRollup: !this.state.hideWorkspaceRollup,\n      })\n    }\n    else {\n      this.setState({\n        hideSettingsRollup: !this.state.hideSettingsRollup,\n      })\n    }\n  }\n\n  leftPaneToggleHidden () {\n    this.setState({\n      leftPaneHidden: !this.state.leftPaneHidden\n    })\n  }\n\n  render() {\n    let headerContent = this.props.headerContent ? this.props.headerContent :\n      <HeaderControls {...this.props} leftPaneToggleHidden={this.leftPaneToggleHidden} />\n    // let leftPaneContent = this.props.leftPaneContent ? this.props.leftPaneContent : ''\n    let leftPaneContent = <VerticalNav hidden={this.state.leftPaneHidden} hideWorkspaceRollup={this.state.hideWorkspaceRollup} hideSettingsRollup={this.state.hideSettingsRollup} toggleRollup={this.toggleVerticalNavRollup} />\n    // let leftPaneContent = <VerticalNav hidden={this.state.leftPaneHidden} hideWorkspaceRollup={this.state.hideWorkspaceRollup} hideSettingsRollup={this.state.hideSettingsRollup} toggleRollup={this.toggleVerticalNavRollup} />\n    let rightPaneContent = this.props.rightPaneContent ? this.props.rightPaneContent : ''\n    let footerContent = this.props.footerContent ? this.props.footerContent : <Footer />\n    // footerContent = 'footer footer footer'\n\n    if (this.props && this.props.location && this.props.location.pathname) {\n      // this.setState({templateFolder: this.props.config.userData+'/'})\n      // console.log(this.props.config.consoleBuffer)\n      rightPaneContent = <Home />\n\n      switch(this.props.location.pathname) {\n\n        case '/About':\n        rightPaneContent = <About />\n        break\n\n        case '/Accounts':\n        rightPaneContent = <Accounts {...this.props}\n          setAccounts={this.setAccounts}\n          accounts={this.state.accounts}\n          clearAccounts={this.clearAccounts}\n          accountsFile={this.state.accountsFile}\n          accountsPath={this.state.accountsPath}\n          />\n        break\n\n        case '/Wallets':\n        rightPaneContent = <Wallets accounts={this.state.accounts} config={this.props.config}\n         {...this.props} setPdfPath={this.setPdfPath}\n        setFolder={this.setPdfPath} pdfExists={this.state.pdfExists}\n        templatePath={this.state.templatePath}\n        folder={this.state.pdfPath}\n        filename={this.state.pdfFile}\n        setTemplatePath={this.setTemplatePath}\n        />\n        break\n\n        case '/PDF':\n        rightPaneContent = <PDF accounts={this.state.accounts} config={this.props.config} pdf={this.state.pdfPath+'/'+this.state.pdfFile}  {...this.props}/>\n        break\n\n        case '/UploadHtmlTemplate':\n        rightPaneContent = <UploadHtmlTemplateModal config={this.props.config} folder={this.state.uploadFolder} setUploadFolder={this.setUploadFolder} {...this.props}/>\n        break\n\n        case '/CopyHtmlTemplate':\n        rightPaneContent = <CopyHtmlTemplateModal config={this.props.config} folder={this.state.templatePath} setTemplatePath={this.setTemplatePath} {...this.props}/>\n        break\n\n        case '/New':\n        rightPaneContent = <New />\n        break\n\n        case '/Import':\n        rightPaneContent = <Import />\n        break\n\n        case '/Export':\n        rightPaneContent = <Export />\n        break\n\n        case '/Report':\n        rightPaneContent = <Report />\n        break\n\n        case '/Settings':\n        rightPaneContent = <Settings darkMode={this.state.darkMode} setDarkMode={this.setDarkMode}/>\n        break\n\n        case '/InstallerHome':\n          rightPaneContent = <InstallerHome config={this.props.config}/>\n        break\n\n        default:\n          rightPaneContent = <Home {...this.props} />\n      }\n    }\n\n    return (\n      <div id=\"wrapper\">\n         <div id=\"header\">\n           {headerContent}\n         </div>\n         <div id=\"contentWrapper\">\n           { !this.state.leftPaneHidden &&\n             <div className='leftPaneContent'>\n            { leftPaneContent }\n             </div>\n           }\n           <div className='rightPaneContent'>\n           {rightPaneContent}\n           </div>\n        </div>\n         <div id=\"footer\">\n            <div className='footerContent'>{footerContent}</div>\n         </div>\n       </div>\n    )\n  }\n}\n\nexport default AppMain\n"]},"metadata":{},"sourceType":"module"}