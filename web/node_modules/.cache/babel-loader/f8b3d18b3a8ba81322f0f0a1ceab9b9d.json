{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/App/Accounts.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Jumbotron, Container, Button, Form, FormGroup, Input, ButtonGroup } from 'reactstrap';\nimport { generateAccounts } from '../../neo-paper/accounts.js';\nimport util from 'util';\nimport './style.css';\n\nconst electron = window.require('electron');\n\nconst divStyle = {\n  display: 'flex',\n  alignItems: 'center'\n};\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n    this.generate = this.generate.bind(this);\n    this.import = this.import.bind(this);\n    this.renderGenerateAccounts = this.renderGenerateAccounts.bind(this);\n    this.createWallet = this.createWallet.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.select = this.select.bind(this);\n    this.state = {\n      amount: '',\n      name: '',\n      url: '',\n      payout: '',\n      folder: this.props.accountsPath,\n      filename: this.props.accountsFile,\n      dropdownOpen: false,\n      assetType: 'Neo'\n    };\n  }\n\n  componentDidMount() {}\n\n  generate(e) {\n    console.log('Generating: ' + this.state.amount);\n    console.log('Name: ' + this.state.name);\n    console.log('URL: ' + this.state.url);\n    console.log('Payout: ' + this.state.payout);\n    console.log('Asset Type: ' + this.state.assetType);\n    console.log('fakepath: ' + this.state.folder);\n    let realpath;\n    if (document.getElementsByTagName('input')[0].files[0]) realpath = document.getElementsByTagName('input')[0].files[0].path;else realpath = this.state.folder;\n    console.log('realpath: ' + realpath);\n    this.setState({\n      folder: realpath\n    });\n    console.log('filename: ' + this.state.filename);\n    let accounts = generateAccounts(this.state.amount, this.state.name, this.state.url, this.state.payout, this.state.assetType);\n    this.props.setAccounts(accounts, realpath, this.state.filename);\n    window.ipcRenderer.send('write-file', {\n      path: realpath + '/' + this.state.filename,\n      data: JSON.stringify(accounts).toString()\n    });\n  }\n\n  import(e) {\n    let realpath;\n    if (document.getElementsByTagName('input')[0].files[0]) realpath = document.getElementsByTagName('input')[0].files[0].path;else realpath = this.state.folder;\n    electron.ipcRenderer.on('read-file-reply', function (event, arg) {\n      this.props.setAccounts(JSON.parse(arg), realpath, this.state.filename);\n    });\n    electron.ipcRenderer.send('read-file', realpath + '/' + this.state.filename);\n  }\n\n  createWallet() {\n    this.props.history.push('Wallets');\n  }\n\n  select(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n      assetType: event.target.innerText\n    });\n    console.log('selected: ' + event.target.innerText);\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  renderGenerateAccounts() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"vertical-center\",\n      id: \"ma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container hero-container text-center\",\n      id: \"ma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Accounts \"), React.createElement(\"p\", {\n      className: \"lead\",\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Generate  accounts (WARNING: files are overwritten!)\"), React.createElement(Container, {\n      className: \"p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"accountsFormLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"upload_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      directory: \"\",\n      webkitdirectory: \"\",\n      type: \"file\",\n      id: \"ma\",\n      onChange: e => this.setState({\n        folder: document.getElementsByTagName('input')[0].files[0].path\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"btn btn-primary\",\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Choose Path\"), React.createElement(\"span\", {\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, ' ' + this.state.folder))), React.createElement(Input, {\n      style: {\n        width: \"400px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"File Name\",\n      value: this.state.filename,\n      onChange: e => this.setState({\n        filename: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"400px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Event Name\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"400px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Event URL\",\n      value: this.state.url,\n      onChange: e => this.setState({\n        url: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"200px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Event Payout\",\n      value: this.state.payout,\n      onChange: e => this.setState({\n        payout: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, 'Asset Type'), React.createElement(DropdownMenu, {\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      onClick: this.select,\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, 'Neo'), React.createElement(DropdownItem, {\n      onClick: this.select,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, 'Gas')))), React.createElement(Input, {\n      style: {\n        width: \"200px\"\n      },\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"How many accounts?\",\n      value: this.state.amount,\n      onChange: e => this.setState({\n        amount: e.target.value\n      }),\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: e => this.generate(e),\n      color: \"warning\",\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Generate\"), React.createElement(Button, {\n      onClick: e => this.import(e),\n      color: \"warning\",\n      id: \"fourteenFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Import\"))))));\n  }\n\n  render() {\n    if (!this.props.accounts.length) {\n      return this.renderGenerateAccounts();\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        className: \"vertical-center\",\n        id: \"ma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container hero-container text-center\",\n        id: \"ma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Accounts \"), React.createElement(\"p\", {\n        className: \"lead\",\n        id: \"fourteenFont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"There are \", this.props.accounts.length, \" accounts.\"), React.createElement(\"p\", {\n        className: \"lead mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Container, {\n        className: \"p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"accountsTextArea\",\n        disabled: true,\n        cols: \"100\",\n        rows: \"40\",\n        name: \"accounts\",\n        value: util.inspect(this.props.accounts, {\n          depth: null\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.props.clearAccounts,\n        color: \"warning\",\n        id: \"fourteenFont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Clear\"), ' ', React.createElement(Button, {\n        onClick: this.createWallet,\n        color: \"warning\",\n        id: \"fourteenFont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Create Wallet\"))))));\n    }\n  }\n\n}\n\nexport default Accounts;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/App/Accounts.js"],"names":["React","Component","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Jumbotron","Container","Button","Form","FormGroup","Input","ButtonGroup","generateAccounts","util","electron","window","require","divStyle","display","alignItems","Accounts","constructor","props","generate","bind","import","renderGenerateAccounts","createWallet","toggle","select","state","amount","name","url","payout","folder","accountsPath","filename","accountsFile","dropdownOpen","assetType","componentDidMount","e","console","log","realpath","document","getElementsByTagName","files","path","setState","accounts","setAccounts","ipcRenderer","send","data","JSON","stringify","toString","on","event","arg","parse","history","push","target","innerText","width","value","render","length","inspect","depth","clearAccounts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Jumbotron, Container, Button, Form, FormGroup, Input, ButtonGroup } from 'reactstrap'\nimport { generateAccounts } from '../../neo-paper/accounts.js'\n\nimport util from 'util'\n\nimport './style.css'\n\nconst electron = window.require('electron')\n\nconst divStyle = {\n  display: 'flex',\n  alignItems: 'center'\n}\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props)\n\n    this.generate = this.generate.bind(this)\n    this.import = this.import.bind(this)\n    this.renderGenerateAccounts = this.renderGenerateAccounts.bind(this)\n    this.createWallet = this.createWallet.bind(this)\n    this.toggle = this.toggle.bind(this)\n    this.select = this.select.bind(this)\n\n    this.state = {\n      amount: '',\n      name: '',\n      url: '',\n      payout: '',\n      folder: this.props.accountsPath,\n      filename: this.props.accountsFile,\n      dropdownOpen: false,\n      assetType: 'Neo'\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  generate(e) {\n    console.log('Generating: '+this.state.amount)\n    console.log('Name: '+this.state.name)\n    console.log('URL: '+this.state.url)\n    console.log('Payout: '+this.state.payout)\n    console.log('Asset Type: '+this.state.assetType)\n    console.log('fakepath: '+this.state.folder)\n\n    let realpath\n\n    if (document.getElementsByTagName('input')[0].files[0])\n      realpath = document.getElementsByTagName('input')[0].files[0].path\n    else realpath = this.state.folder\n\n    console.log('realpath: '+realpath)\n\n    this.setState({folder: realpath})\n\n    console.log('filename: '+this.state.filename)\n\n    let accounts = generateAccounts(this.state.amount, this.state.name, this.state.url, this.state.payout, this.state.assetType)\n\n    this.props.setAccounts(accounts, realpath, this.state.filename)\n\n    window.ipcRenderer.send('write-file', { path: realpath+'/'+this.state.filename, data: JSON.stringify(accounts).toString() })\n  }\n\n  import(e) {\n    let realpath\n\n    if (document.getElementsByTagName('input')[0].files[0])\n      realpath = document.getElementsByTagName('input')[0].files[0].path\n    else realpath = this.state.folder\n\n    electron.ipcRenderer.on('read-file-reply', function (event, arg) {\n      this.props.setAccounts(JSON.parse(arg), realpath, this.state.filename)\n    })\n\n    electron.ipcRenderer.send('read-file', realpath+'/'+this.state.filename)\n  }\n\n\n  createWallet() {\n    this.props.history.push('Wallets')\n  }\n\n  select(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n      assetType: event.target.innerText\n    })\n\n    console.log('selected: '+event.target.innerText)\n  }\n\n  toggle() {\n    this.setState({dropdownOpen: !this.state.dropdownOpen})\n  }\n\n  renderGenerateAccounts() {\n    return(\n      <React.Fragment>\n        <Jumbotron className=\"vertical-center\" id=\"ma\">\n        <div className=\"container hero-container text-center\" id=\"ma\">\n          <h2 className=\"display-4\">Accounts </h2>\n          <p className=\"lead\" id=\"fourteenFont\">Generate  accounts (WARNING: files are overwritten!)</p>\n          <Container className=\"p-5\">\n             <Form id=\"accountsFormLeft\">\n               <FormGroup>\n                 <div id=\"upload_button\">\n                   <label>\n                     <input directory=\"\" webkitdirectory=\"\" type=\"file\" id=\"ma\"\n                       onChange={e => this.setState({ folder: document.getElementsByTagName('input')[0].files[0].path })}\n                     />\n                     <span className=\"btn btn-primary\" id=\"fourteenFont\">Choose Path</span>\n                     <span id=\"fourteenFont\">{' '+this.state.folder}</span>\n                   </label>\n                 </div>\n                 <Input\n                   style={{width: \"400px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"File Name\"\n                   value={this.state.filename}\n                   onChange={e => this.setState({ filename: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n                 <Input\n                   style={{width: \"400px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"Event Name\"\n                   value={this.state.name}\n                   onChange={e => this.setState({ name: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n                 <Input\n                   style={{width: \"400px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"Event URL\"\n                   value={this.state.url}\n                   onChange={e => this.setState({ url: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n                 <div style={divStyle}>\n                 <Input\n                   style={{width: \"200px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"Event Payout\"\n                   value={this.state.payout}\n                   onChange={e => this.setState({ payout: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n                 <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                    <DropdownToggle caret id=\"fourteenFont\">\n                      {'Asset Type'}\n                      </DropdownToggle>\n                    <DropdownMenu id=\"fourteenFont\">\n                      <DropdownItem onClick={this.select} id=\"fourteenFont\">{'Neo'}</DropdownItem>\n                      <DropdownItem onClick={this.select}>{'Gas'}</DropdownItem>\n                    </DropdownMenu>\n                 </Dropdown>\n                 </div>\n                 <Input\n                   style={{width: \"200px\"}}\n                   type=\"text\"\n                   name=\"text\"\n                   placeholder=\"How many accounts?\"\n                   value={this.state.amount}\n                   onChange={e => this.setState({ amount: e.target.value })}\n                   id=\"fourteenFont\"\n                 />\n               </FormGroup>\n               <Button onClick={e => this.generate(e)} color=\"warning\" id=\"fourteenFont\">Generate</Button>\n               <Button onClick={e => this.import(e)} color=\"warning\" id=\"fourteenFont\">Import</Button>\n             </Form>\n           </Container>\n        </div>\n        </Jumbotron>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    if (!this.props.accounts.length) {\n      return(this.renderGenerateAccounts())\n    } else {\n      return(\n        <React.Fragment>\n          <Jumbotron className=\"vertical-center\" id=\"ma\">\n          <div className=\"container hero-container text-center\" id=\"ma\">\n            <h1 className=\"display-4\">Accounts </h1>\n            <p className=\"lead\" id=\"fourteenFont\">There are {this.props.accounts.length} accounts.</p>\n            <p className=\"lead mx-auto\"></p>\n            <Container className=\"p-5\">\n               <textarea\n                id=\"accountsTextArea\"\n                disabled\n                cols=\"100\"\n                rows=\"40\"\n                name=\"accounts\"\n                value={util.inspect(this.props.accounts, {depth:null})}/>\n                <br/>\n                <ButtonGroup>\n                <Button onClick={this.props.clearAccounts} color=\"warning\" id=\"fourteenFont\">Clear</Button>{' '}\n                <Button onClick={this.createWallet} color=\"warning\" id=\"fourteenFont\">Create Wallet</Button>\n                </ButtonGroup>\n             </Container>\n\n          </div>\n          </Jumbotron>\n        </React.Fragment>\n      )\n    }\n  }\n}\n\nexport default Accounts\n"]},"metadata":{},"sourceType":"module"}