{"ast":null,"code":"var _jsxFileName = \"/home/fet/nwd/neo-burner/src/components/App/Wallets.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Button, Form, FormGroup, Input, Container } from 'reactstrap';\nimport BurnerModal from '../Ui/Modal/Modal';\nimport FlashButton from '../Ui/FlashButton/FlashButton';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport PDF from './PDF.js';\nimport ReactToPrint from 'react-to-print';\nimport PrintTemplate from 'react-print';\nimport { QRCode } from 'react-qr-svg';\nimport { bip39 } from 'bip39';\nimport util from 'util';\n\nconst electron = window.require('electron');\n\nclass Wallets extends Component {\n  constructor(props) {\n    super(props);\n    this.goToAccounts = this.goToAccounts.bind(this);\n    this.createPdf = this.createPdf.bind(this);\n    this.state = {\n      folder: '/tmp',\n      filename: 'wallets.pdf',\n      generatingPdf: false,\n      pdfExists: false\n    };\n  }\n\n  componentDidMount() {\n    // console.log('accountsPath: '+util.inspect(this.props.config, {depth: null}))\n    this.setState({\n      folder: this.props.folder\n    });\n    electron.ipcRenderer.on('pdf-created', (event, arg) => {\n      console.log('ipc pdf-created');\n      this.props.setPdfPath(this.props.folder + '/' + this.props.filename);\n      this.state.generatingPdf = false;\n      this.props.history.push('Wallets');\n    });\n  }\n\n  goToAccounts() {\n    this.props.history.push('Accounts');\n  }\n\n  createPdf() {\n    this.state.generatingPdf = true;\n    this.state.pdfExists = true;\n    this.props.history.push('Wallets'); // this.props.history.push('PDF')\n\n    window.ipcRenderer.send('create-pdf', {\n      path: this.state.folder + '/',\n      filename: this.state.filename,\n      data: this.props.accounts\n    });\n    console.log('wallet folder: ' + this.state.folder + '/' + this.state.filename);\n  }\n\n  render() {\n    if (this.props.accounts.length) {\n      console.log('got ' + this.props.accounts.length + ' accounts');\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        className: \"vertical-center\",\n        id: \"ma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container hero-container text-center\",\n        id: \"ma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Wallets \"), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Found \", this.props.accounts.length, \" accounts.\"), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"lead mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Form, {\n        id: \"accountsFormLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"upload_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        directory: \"\",\n        webkitdirectory: \"\",\n        type: \"file\",\n        id: \"ma\",\n        onChange: e => this.setState({\n          folder: document.getElementsByTagName('input')[0].files[0].path\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Choose Path\"), ' ' + this.state.folder)), React.createElement(Input, {\n        style: {\n          width: \"400px\"\n        },\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"File Name\",\n        value: this.state.filename,\n        onChange: e => this.setState({\n          filename: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(FlashButton, {\n        buttonLabel: \"Create PDF\",\n        title: 'Burn Notice',\n        message: 'Please wait while a PDF containing ' + this.props.accounts.length + ' wallets is being generated at ' + this.state.folder + '/' + this.state.filename,\n        open: this.state.generatingPdf,\n        onClick: this.createPdf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), \" \", ' ', React.createElement(Button, {\n        onClick: this.goToAccounts,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"View PDF\")))))));\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        className: \"vertical-center\",\n        id: \"ma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container hero-container text-center\",\n        id: \"ma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Wallets \"), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Found \", this.props.accounts.length, \" accounts.\"), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"lead mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.goToAccounts,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Go To Accounts\"))));\n    }\n  }\n\n}\n\nexport default Wallets;","map":{"version":3,"sources":["/home/fet/nwd/neo-burner/src/components/App/Wallets.js"],"names":["React","Component","Jumbotron","Button","Form","FormGroup","Input","Container","BurnerModal","FlashButton","PDFDownloadLink","PDF","ReactToPrint","PrintTemplate","QRCode","bip39","util","electron","window","require","Wallets","constructor","props","goToAccounts","bind","createPdf","state","folder","filename","generatingPdf","pdfExists","componentDidMount","setState","ipcRenderer","on","event","arg","console","log","setPdfPath","history","push","send","path","data","accounts","render","length","e","document","getElementsByTagName","files","width","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Jumbotron, Button, Form, FormGroup, Input, Container } from 'reactstrap'\nimport BurnerModal from '../Ui/Modal/Modal'\nimport FlashButton from '../Ui/FlashButton/FlashButton'\n\nimport { PDFDownloadLink } from '@react-pdf/renderer'\n\nimport PDF from './PDF.js'\n\nimport ReactToPrint from 'react-to-print'\nimport PrintTemplate from 'react-print'\n\nimport { QRCode } from 'react-qr-svg'\nimport { bip39 } from 'bip39'\n\nimport util from 'util'\n\nconst electron = window.require('electron')\n\nclass Wallets extends Component {\n  constructor(props) {\n    super(props)\n\n    this.goToAccounts = this.goToAccounts.bind(this)\n    this.createPdf = this.createPdf.bind(this)\n\n    this.state = {\n      folder: '/tmp',\n      filename: 'wallets.pdf',\n      generatingPdf: false,\n      pdfExists: false\n    }\n  }\n\n  componentDidMount() {\n    // console.log('accountsPath: '+util.inspect(this.props.config, {depth: null}))\n    this.setState({ folder: this.props.folder })\n\n    electron.ipcRenderer.on('pdf-created', (event, arg) => {\n      console.log('ipc pdf-created')\n      this.props.setPdfPath(this.props.folder+'/'+this.props.filename)\n      this.state.generatingPdf = false\n      this.props.history.push('Wallets')\n    })\n  }\n\n  goToAccounts() {\n    this.props.history.push('Accounts')\n  }\n\n  createPdf() {\n    this.state.generatingPdf = true\n    this.state.pdfExists = true\n    this.props.history.push('Wallets')\n    // this.props.history.push('PDF')\n    window.ipcRenderer.send('create-pdf', { path: this.state.folder+'/', filename: this.state.filename, data: this.props.accounts })\n    console.log('wallet folder: '+this.state.folder+'/'+this.state.filename)\n  }\n\n  render() {\n    if (this.props.accounts.length) {\n      console.log('got '+this.props.accounts.length+' accounts')\n      return(\n        <React.Fragment>\n          <Jumbotron className=\"vertical-center\" id=\"ma\">\n          <div className=\"container hero-container text-center\" id=\"ma\">\n            <h1 className=\"display-4\">Wallets </h1>\n            <p className=\"lead\">Found {this.props.accounts.length} accounts.</p>\n            <hr className=\"my-4\" />\n            <p className=\"lead mx-auto\">\n              <Container className=\"p-5\">\n                <Form id=\"accountsFormLeft\">\n                  <FormGroup>\n                    <div id=\"upload_button\">\n                      <label>\n                        <input directory=\"\" webkitdirectory=\"\" type=\"file\" id=\"ma\"\n                          onChange={e => this.setState({ folder: document.getElementsByTagName('input')[0].files[0].path })}\n                          />\n                        <span class=\"btn btn-primary\">Choose Path</span>\n                        {' '+this.state.folder}\n                      </label>\n                    </div>\n                    <Input\n                      style={{width: \"400px\"}}\n                      type=\"text\"\n                      name=\"text\"\n                      placeholder=\"File Name\"\n                      value={this.state.filename}\n                      onChange={e => this.setState({ filename: e.target.value })}\n                    />\n                  </FormGroup>\n                  <FlashButton buttonLabel='Create PDF' title={'Burn Notice'} message={'Please wait while a PDF containing '+this.props.accounts.length+' wallets is being generated at '+this.state.folder+'/'+this.state.filename} open={this.state.generatingPdf} onClick={this.createPdf}/> {' '}\n                  <Button onClick={this.goToAccounts} color=\"warning\" >View PDF</Button>\n\n                </Form>\n              </Container>\n            </p>\n          </div>\n          </Jumbotron>\n        </React.Fragment>\n      )\n    } else {\n      return(\n        <React.Fragment>\n          <Jumbotron className=\"vertical-center\" id=\"ma\">\n          <div className=\"container hero-container text-center\" id=\"ma\">\n            <h1 className=\"display-4\">Wallets </h1>\n            <p className=\"lead\">Found {this.props.accounts.length} accounts.</p>\n            <hr className=\"my-4\" />\n            <p className=\"lead mx-auto\">\n            </p>\n            <Button onClick={this.goToAccounts} color=\"warning\" >Go To Accounts</Button>\n          </div>\n          </Jumbotron>\n        </React.Fragment>\n      )\n    }\n  }\n}\nexport default Wallets\n"]},"metadata":{},"sourceType":"module"}